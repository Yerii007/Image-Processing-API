# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
*.egg-info/
.installed.cfg
*.egg

# Virtual environments
# Common names for virtual environment directories
venv/
env/
ENV/
.venv/
.env/
myenv/

# PyCharm / IntelliJ
.idea/
*.iml
*.iws

# Visual Studio Code
.vscode/
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json
*.code-workspace

# Sublime Text
*.sublime-project
*.sublime-workspace

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db
desktop.ini

# Editor backup files
*~
.*.swp
.swp
.swo

# Logs
*.log
logs/

# Environment variables
# Typically, you have a .env file for local development.
# This file should contain secrets and local config.
# It SHOULD NOT be committed to version control.
.env

# Database files (especially relevant for SQLite)
# If using SQLite locally, the .db file contains your data.
# It's usually better to exclude it and use migrations or fixtures for setup.
# If you *must* commit a base DB, remove this line and add specific exclusions.
*.db
*.sqlite3

# Docker specific files
# Add Dockerfile if you have multiple and want to be specific
# Dockerfile*
# docker-compose.override.yml is often used for local dev overrides
# docker-compose.prod.yml is often used for production overrides
docker-compose.override.yml

# Docker build context
# These files/directories are often created during Docker builds or by Docker itself
.dockerignore # Often, .dockerignore itself is excluded, but can be committed
# If you build images with specific names/tags that create local artifacts

# Testing
.pytest_cache/
.coverage
htmlcov/
.tox/

# Sphinx documentation